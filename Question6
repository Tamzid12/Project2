//
//  main.cpp
//  Q6
//
//  Created by Tamzid chowdhury on 11/7/20.
//

#include <iostream>
//#include <bits/stdc++.h>
#include <fstream>
using namespace std;

  
// A structure to represent a stack
class Stack
{
    public:
    int top;
    unsigned capacity;
    char* array;
};
  
// function to create a stack of given
// capacity. It initializes size of stack as 0
Stack* createStack(unsigned capacity)
{
    Stack* stack = new Stack();
    stack->capacity = capacity;
    stack->top = -1;
    stack->array = new char[(stack->capacity * sizeof(char))];
    return stack;
}
  
// Stack is full when top is equal to the last index
int isFull(Stack* stack)
{ return stack->top == stack->capacity - 1; }
  
// Stack is empty when top is equal to -1
int isEmpty(Stack* stack)
{ return stack->top == -1; }
  
// Function to add an item to stack.
// It increases top by 1
void push(Stack* stack, char item)
{
    if (isFull(stack))
        return;
    stack->array[++stack->top] = item;
}
  
// Function to remove an item from stack.
// It decreases top by 1
char pop(Stack* stack)
{
    if (isEmpty(stack))
        return -1;
    return stack->array[stack->top--];
}
  
// A stack based function to reverse a string
void reverse(string str)
{
    stack <char> st;
    
    for ( int i=0; i<str.length(); i++){
        if (str[i] != ' ')
        st.push(str[i]);
        
        else{
            while ( st.empty() == false ){
                cout << st.top();
                st.pop();
            }
            cout << " ";
        }
    }
    
    while ( st.empty() == false){
        cout<< st.top();
        st.pop();
    }
}
  
// Driver code
int main()
{
    ifstream infile;
    infile.open("input.txt");
    if (infile.fail()){
        cout<< "No such file was found";
    }
    else{
        string str ;
        while(getline(infile,str)){
            cout<< "The original string: " << str << endl;
            cout << "The Reversed String: ";
            reverse(str);
            cout<< endl;
        }
        infile.close();
    }
    
  
    return 0;
}
